Index: src/GameObject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nimport java.awt.Color;\r\nimport java.awt.Graphics;\r\nimport java.awt.Rectangle;\r\nimport java.util.Random;\r\n\r\npublic abstract class GameObject {\r\n\t\r\n\tprotected Random r = new Random();\r\n\t\r\n\t//variables\r\n\tprotected int x, y;\r\n\tprotected int velX, velY;\r\n\tprotected ID id;\r\n\tprotected int w, h;\r\n\tprotected int speed;\r\n\tprotected Color color;\r\n\tprotected boolean isFriendly;\r\n\r\n\t//constructor\r\n\tpublic GameObject(int x, int y, ID id, int w, int h, Color color) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.id = id;\r\n\t\tthis.w = w;\r\n\t\tthis.h = h;\r\n\t\tthis.color = color;\r\n\t}\r\n\t\r\n\t//tick\r\n\tpublic abstract void tick();\r\n\t\r\n\tpublic Rectangle getBounds() {\r\n\t\treturn new Rectangle(x, y, w, h);\r\n\t}\r\n\t\r\n\tpublic void resetPositionAndSpeed(int h, int speed) {\r\n\t\tif(y <= -h) {\r\n\t\t\ty = Game.HEIGHT;\r\n\t\t\tx = r.nextInt(Game.WIDTH - w);\r\n\t\t\tvelY = -(r.nextInt(speed)) - 3;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void removeGameObject() {\r\n\t\tif(x <= -w || x >= Game.WIDTH + w || y <= -h || y >= Game.HEIGHT + h)\r\n\t\t\tGame.handler.removeObject(this);\r\n\t}\r\n\t\r\n\tpublic void render(Graphics g) {\r\n\t\tg.setColor(color);\r\n\t\tg.fillRect(x, y, w, h);\r\n\t}\r\n\t\r\n\t//getters and setters\r\n\tpublic void setX(int x) {\r\n\t\tthis.x = x;\r\n\t}\r\n\tpublic void setY(int y) {\r\n\t\tthis.y = y;\r\n\t}\r\n\tpublic int getX() {\r\n\t\treturn x;\r\n\t}\r\n\tpublic int getY() {\r\n\t\treturn y;\r\n\t}\r\n\tpublic void setId(ID id) {\r\n\t\tthis.id = id;\r\n\t}\r\n\tpublic ID getId() {\r\n\t\treturn id;\r\n\t}\r\n\tpublic void setVelX(int velX) {\r\n\t\tthis.velX = velX;\r\n\t}\r\n\tpublic void setVelY(int velY) {\r\n\t\tthis.velY = velY;\r\n\t}\r\n\tpublic int getVelX() {\r\n\t\treturn velX;\r\n\t}\r\n\tpublic int getVelY() {\r\n\t\treturn velY;\r\n\t}\r\n\tpublic boolean getIsFriendly(){\r\n\t\treturn isFriendly;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GameObject.java b/src/GameObject.java
--- a/src/GameObject.java	(revision 11d7488461270ffc7b938ba4ab102f53767c2e47)
+++ b/src/GameObject.java	(date 1620782899629)
@@ -11,10 +11,10 @@
 	//variables
 	protected int x, y;
 	protected int velX, velY;
-	protected ID id;
-	protected int w, h;
 	protected int speed;
+	protected int w, h;
 	protected Color color;
+	protected ID id;
 	protected boolean isFriendly;
 
 	//constructor
Index: src/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nimport java.awt.*;\r\nimport java.beans.ConstructorProperties;\r\n\r\n/**\r\n * Player class\r\n */\r\npublic class Player {\r\n\r\n\tpublic static int X, Y;\r\n\tpublic static Boolean hasGun = true;\r\n\r\n\tprivate static Boolean justHit = false;\r\n\tprivate static int counter = 0;\r\n\tpublic static int velX = 0, velY = 0;\r\n\tprivate static int w, h;\r\n\tprivate static Color color;\r\n\r\n\t//constructor\r\n\tpublic Player(int x, int y, int w, int h, Color color) {\r\n\t\tX = x;\r\n\t\tY = y;\r\n\t\tPlayer.w = w;\r\n\t\tPlayer.h = h;\r\n\t\tPlayer.color = color;\r\n\t}\r\n\r\n\t/**\r\n\t * Tick class controls usr movement\r\n\t * and keeps player within window bounds\r\n\t */\r\n\tpublic static void tick() {\r\n\t\tX += velX;\r\n\t\tY += velY;\r\n\t\t//x bounds for window\r\n\t\tX = Game.clamp(X, 0, Game.WIDTH - 45);\r\n\t\t//y bounds for window\r\n\t\tY = Game.clamp(Y, 0, Game.HEIGHT/2 - 45);\r\n\r\n\t\tif(!justHit) {\r\n\t\t\tcollision();\r\n\t\t} else {\r\n\t\t\tcounter++;\r\n\t\t\tif(counter % 50 == 0){\r\n\t\t\t\tcounter = 0;\r\n\t\t\t\tjustHit = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static Rectangle getBounds() {\r\n\t\treturn new Rectangle(X, Y, w, h);\r\n\t}\r\n\r\n\t/**\r\n\t * Render controls the visual components of the player\r\n\t * @param g Graphics\r\n\t */\r\n\tpublic static void render(Graphics g){\r\n\t\tif(justHit){\r\n\t\t\tg.setColor(color);\r\n\t\t\tif(counter % 5 != 0)\r\n\t\t\t\tg.fillRect(X, Y, w, h);\r\n\t\t} else {\r\n\t\t\tg.setColor(color);\r\n\t\t\tg.fillRect(X, Y, w, h);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles player collision with\r\n\t * enemies\r\n\t */\r\n\tprivate static void collision(){\r\n\t\tfor(int i = 0; i < Game.handler.object.size(); i++) {\r\n\t\t\t\r\n\t\t\tGameObject tempObject = Game.handler.object.get(i);\r\n\t\t\t//enemy collision\r\n\t\t\tif(tempObject.getId() == ID.Enemy) {\r\n\t\t\t\tif(getBounds().intersects(tempObject.getBounds())) {\r\n\t\t\t\t\tHUD.HEALTH -= 1;\r\n\t\t\t\t\tjustHit = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//bullet collision\r\n\t\t\tif(tempObject.getId() == ID.Bullet){\r\n\t\t\t\tif(getBounds().intersects(tempObject.getBounds())) {\r\n\t\t\t\t\tif(!tempObject.getIsFriendly()) {\r\n\t\t\t\t\t\tHUD.HEALTH -= 1;\r\n\t\t\t\t\t\tGame.handler.removeObject(tempObject);\r\n\t\t\t\t\t\tjustHit = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t//gunItem collision\r\n\t\t\tif(tempObject.getId() == ID.GunItem){\r\n\t\t\t\tif(getBounds().intersects(tempObject.getBounds())) {\r\n\t\t\t\t\tGame.handler.removeObject(tempObject);\r\n\t\t\t\t\thasGun = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void shoot(int x, int y, boolean isFriendly){\r\n\t\tGame.handler.addObject(new Bullet(Player.X, Player.Y, x, y, true, ID.Bullet, 12, 12, Color.black));\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Player.java b/src/Player.java
--- a/src/Player.java	(revision 11d7488461270ffc7b938ba4ab102f53767c2e47)
+++ b/src/Player.java	(date 1620783363275)
@@ -8,11 +8,10 @@
 public class Player {
 
 	public static int X, Y;
+	public static int velX = 0, velY = 0;
 	public static Boolean hasGun = true;
-
 	private static Boolean justHit = false;
 	private static int counter = 0;
-	public static int velX = 0, velY = 0;
 	private static int w, h;
 	private static Color color;
 
@@ -37,14 +36,12 @@
 		//y bounds for window
 		Y = Game.clamp(Y, 0, Game.HEIGHT/2 - 45);
 
-		if(!justHit) {
-			collision();
-		} else {
-			counter++;
-			if(counter % 50 == 0){
-				counter = 0;
-				justHit = false;
-			}
+
+		collision();
+		counter++;
+		if(counter % 30 == 0){
+			counter = 0;
+			justHit = false;
 		}
 	}
 
@@ -59,7 +56,7 @@
 	public static void render(Graphics g){
 		if(justHit){
 			g.setColor(color);
-			if(counter % 5 != 0)
+			if(counter % 7 != 0)
 				g.fillRect(X, Y, w, h);
 		} else {
 			g.setColor(color);
@@ -72,32 +69,26 @@
 	 * enemies
 	 */
 	private static void collision(){
-		for(int i = 0; i < Game.handler.object.size(); i++) {
-			
+		for (int i = 0; i < Game.handler.object.size(); i++) {
+
 			GameObject tempObject = Game.handler.object.get(i);
-			//enemy collision
-			if(tempObject.getId() == ID.Enemy) {
-				if(getBounds().intersects(tempObject.getBounds())) {
-					HUD.HEALTH -= 1;
+			if(!justHit) {
+				//enemy collision
+				if (tempObject.getId() == ID.Enemy && getBounds().intersects(tempObject.getBounds())) {
+					HUD.HEALTH -= 5;
 					justHit = true;
 				}
-			}
-			//bullet collision
-			if(tempObject.getId() == ID.Bullet){
-				if(getBounds().intersects(tempObject.getBounds())) {
-					if(!tempObject.getIsFriendly()) {
-						HUD.HEALTH -= 1;
-						Game.handler.removeObject(tempObject);
-						justHit = true;
-					}
+				//bullet collision
+				if (tempObject.getId() == ID.Bullet && getBounds().intersects(tempObject.getBounds()) && !tempObject.getIsFriendly()) {
+					HUD.HEALTH -= 5;
+					Game.handler.removeObject(tempObject);
+					justHit = true;
 				}
 			}
 			//gunItem collision
-			if(tempObject.getId() == ID.GunItem){
-				if(getBounds().intersects(tempObject.getBounds())) {
-					Game.handler.removeObject(tempObject);
-					hasGun = true;
-				}
+			if (tempObject.getId() == ID.GunItem && getBounds().intersects(tempObject.getBounds())) {
+				Game.handler.removeObject(tempObject);
+				hasGun = true;
 			}
 		}
 	}
Index: src/MouseInput.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nimport java.awt.event.MouseAdapter;\r\nimport java.awt.event.MouseEvent;\r\n\r\npublic class MouseInput extends MouseAdapter {\r\n\r\n    public void mouseClicked(MouseEvent e){\r\n        //FIXME Not every click fires a bullet\r\n        // my best guess is that it has to do with the MouseInput Class\r\n        int x = e.getX();\r\n        int y = e.getY();\r\n        System.out.println(x + \", \" + y);\r\n        if(Player.hasGun){\r\n            Player.shoot(x, y, true);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/MouseInput.java b/src/MouseInput.java
--- a/src/MouseInput.java	(revision 11d7488461270ffc7b938ba4ab102f53767c2e47)
+++ b/src/MouseInput.java	(date 1620781289905)
@@ -4,12 +4,10 @@
 
 public class MouseInput extends MouseAdapter {
 
-    public void mouseClicked(MouseEvent e){
-        //FIXME Not every click fires a bullet
-        // my best guess is that it has to do with the MouseInput Class
+    public void mousePressed(MouseEvent e){
         int x = e.getX();
         int y = e.getY();
-        System.out.println(x + ", " + y);
+        //System.out.println(x + ", " + y);
         if(Player.hasGun){
             Player.shoot(x, y, true);
         }
Index: src/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n\r\nimport java.awt.Canvas;\r\nimport java.awt.Color;\r\nimport java.awt.Graphics;\r\nimport java.awt.event.MouseEvent;\r\nimport java.awt.event.MouseListener;\r\nimport java.awt.image.BufferStrategy;\r\nimport java.util.Random;\r\n\r\npublic class Game extends Canvas implements Runnable{\r\n\r\n\t//variables and objects initialization\r\n\tpublic static final int WIDTH = 640, HEIGHT = WIDTH / 12 * 9;\r\n\t\r\n\tprivate Thread thread;\r\n\tprivate boolean running = false;\r\n\tprivate Random r;\r\n\tpublic static Handler handler;\r\n\tpublic static Player player;\r\n\tprivate HUD hud;\r\n\t\r\n\t//main game code\r\n\tpublic Game() {\r\n\t\tthis.setFocusable(true);\r\n\t\thandler = new Handler();\r\n\t\tthis.addKeyListener(new KeyInput());\r\n\t\tthis.addMouseListener(new MouseInput());\r\n\r\n\t\thud = new HUD();\r\n\t\tr = new Random();\r\n\t\t\r\n\t\tnew Window(WIDTH, HEIGHT, \"Sky Dive\", this);\r\n\r\n\t\tfor(int i = 0; i < 1; i++) {\r\n\t\t\thandler.addObject(new Enemy(r.nextInt(WIDTH), r.nextInt(HEIGHT) + HEIGHT, ID.Enemy, 16, 16, Color.red, 7));\r\n\t\t}\r\n\t\thandler.addObject(new ShooterEnemy(r.nextInt(WIDTH), r.nextInt(HEIGHT) + HEIGHT, ID.ShooterEnemy, 26, 26, Color.orange, 2));\r\n\t\tplayer = new Player(WIDTH / 2 - 16, 100, 32, 32, Color.gray);\r\n\t\thandler.addObject(new GunItem(r.nextInt(WIDTH), r.nextInt(HEIGHT) + HEIGHT, ID.GunItem, 16, 16, Color.blue, 1));\r\n\t}\r\n\r\n\tpublic synchronized void start() {\r\n\t\tthread = new Thread(this);\r\n\t\tthread.start();\r\n\t\trunning = true;\r\n\t}\r\n\tpublic synchronized void stop() {\r\n\t\ttry {\r\n\t\t\tthread.join();\r\n\t\t\trunning = false;\r\n\t\t}catch(Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\t\r\n\t//Necessary Stuff Didn't Write, but do understand\r\n\tpublic void run() {\r\n\t\tlong lastTime = System.nanoTime();\r\n\t\tdouble amountOfTicks = 60.0;\r\n\t\tdouble ns = 1000000000 / amountOfTicks;\r\n\t\tdouble delta = 0;\r\n\t\tlong timer = System.currentTimeMillis();\r\n\t\tint frames = 0;\r\n\t\twhile(running) {\r\n\t\t\tlong now = System.nanoTime();\r\n\t\t\tdelta += (now - lastTime) / ns;\r\n\t\t\tlastTime = now;\r\n\t\t\twhile(delta >= 1) {\r\n\t\t\t\t//FIXME: the tick method is called several times here\r\n\t\t\t\t// in too short of a time, therefore knocking off several hitpoints\r\n\t\t\t\tthis.tick();\r\n\t\t\t\tdelta--;\r\n\t\t\t}\r\n\t\t\tif(running)\r\n\t\t\t\trender();\r\n\t\t\tframes++;\r\n\t\t\t\r\n\t\t\tif(System.currentTimeMillis() - timer > 1000) {\r\n\t\t\t\ttimer += 1000;\r\n\t\t\t\t//System.out.println(\"FPS: \" + frames);\r\n\t\t\t\tframes = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tstop();\r\n\t}\r\n\t\t\r\n\t//Runs all math Components of the Game\r\n\tprivate void tick(){\r\n\t\thandler.tick();\r\n\t\thud.tick();\r\n\t\tPlayer.tick();\r\n\t}\r\n\t\r\n\t//Runs all visual Components of the Game\r\n\tprivate void render() {\r\n\t\tBufferStrategy bs = this.getBufferStrategy();\r\n\t\tif(bs == null) {\r\n\t\t\tthis.createBufferStrategy(3);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tGraphics g = bs.getDrawGraphics();\r\n\r\n\t\tg.setColor(Color.cyan);\r\n\t\tg.fillRect(0, 0, WIDTH, HEIGHT);\r\n\r\n\t\thandler.render(g);\r\n\t\thud.render(g);\r\n\t\tPlayer.render(g);\r\n\r\n\t\tg.dispose();\r\n\t\tbs.show();\r\n\t}\r\n\r\n\t/**\r\n\t * keeps a variable within bounds\r\n\t * Used in tick method for HUD and Player classes\r\n\t * @param var initial var\r\n\t * @param min bound\r\n\t * @param max bound\r\n\t * @return the bound back\r\n\t */\r\n\tpublic static int clamp(int var, int min, int max) {\r\n\t\tif(var >= max)\r\n\t\t\treturn max;\r\n\t\telse return Math.max(var, min);\r\n\t}\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\tnew Game();\t\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Game.java b/src/Game.java
--- a/src/Game.java	(revision 11d7488461270ffc7b938ba4ab102f53767c2e47)
+++ b/src/Game.java	(date 1620781289917)
@@ -1,24 +1,21 @@
-
 
 import java.awt.Canvas;
 import java.awt.Color;
 import java.awt.Graphics;
-import java.awt.event.MouseEvent;
-import java.awt.event.MouseListener;
 import java.awt.image.BufferStrategy;
 import java.util.Random;
 
-public class Game extends Canvas implements Runnable{
+public class Game extends Canvas implements Runnable {
 
 	//variables and objects initialization
 	public static final int WIDTH = 640, HEIGHT = WIDTH / 12 * 9;
-	
-	private Thread thread;
-	private boolean running = false;
-	private Random r;
 	public static Handler handler;
 	public static Player player;
 	private HUD hud;
+	private Thread thread;
+	private boolean running = false;
+	private Random r;
+
 	
 	//main game code
 	public Game() {
@@ -34,12 +31,14 @@
 
 		for(int i = 0; i < 1; i++) {
 			handler.addObject(new Enemy(r.nextInt(WIDTH), r.nextInt(HEIGHT) + HEIGHT, ID.Enemy, 16, 16, Color.red, 7));
-		}
-		handler.addObject(new ShooterEnemy(r.nextInt(WIDTH), r.nextInt(HEIGHT) + HEIGHT, ID.ShooterEnemy, 26, 26, Color.orange, 2));
-		player = new Player(WIDTH / 2 - 16, 100, 32, 32, Color.gray);
-		handler.addObject(new GunItem(r.nextInt(WIDTH), r.nextInt(HEIGHT) + HEIGHT, ID.GunItem, 16, 16, Color.blue, 1));
-	}
+			handler.addObject(new ShooterEnemy(r.nextInt(WIDTH), r.nextInt(HEIGHT) + HEIGHT, ID.ShooterEnemy, 26, 26, Color.orange, 2));
+			handler.addObject(new GunItem(r.nextInt(WIDTH), r.nextInt(HEIGHT) + HEIGHT, ID.GunItem, 16, 16, Color.blue, 1));
+		}
 
+		player = new Player(WIDTH / 2 - 16, 100, 32, 32, Color.gray);
+
+	}
+
 	public synchronized void start() {
 		thread = new Thread(this);
 		thread.start();
@@ -53,8 +52,7 @@
 			e.printStackTrace();
 		}
 	}
-	
-	//Necessary Stuff Didn't Write, but do understand
+
 	public void run() {
 		long lastTime = System.nanoTime();
 		double amountOfTicks = 60.0;
@@ -67,8 +65,7 @@
 			delta += (now - lastTime) / ns;
 			lastTime = now;
 			while(delta >= 1) {
-				//FIXME: the tick method is called several times here
-				// in too short of a time, therefore knocking off several hitpoints
+
 				this.tick();
 				delta--;
 			}
@@ -78,7 +75,7 @@
 			
 			if(System.currentTimeMillis() - timer > 1000) {
 				timer += 1000;
-				//System.out.println("FPS: " + frames);
+				System.out.println("FPS: " + frames);
 				frames = 0;
 			}
 		}
@@ -113,14 +110,7 @@
 		bs.show();
 	}
 
-	/**
-	 * keeps a variable within bounds
-	 * Used in tick method for HUD and Player classes
-	 * @param var initial var
-	 * @param min bound
-	 * @param max bound
-	 * @return the bound back
-	 */
+	//Keeps Variable in bounds
 	public static int clamp(int var, int min, int max) {
 		if(var >= max)
 			return max;
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1620783786765)
+++ b/.gitignore	(date 1620783786765)
@@ -0,0 +1,3 @@
+out/
+.gitignore
+.idea/
\ No newline at end of file
Index: out/production/RealSkyDive/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"759ae11f-45ec-4453-988b-9a5743102467\" name=\"Default Changelist\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1sMz9jtMSJWdnXFUmOObSriEoXB\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"aspect.path.notification.shown\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Game\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Game\" />\r\n      <module name=\"RealSkyDive\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"ArquillianTestNG\" factoryName=\"\" nameIsGenerated=\"true\">\r\n      <option name=\"arquillianRunConfiguration\">\r\n        <value>\r\n          <option name=\"containerStateName\" value=\"\" />\r\n        </value>\r\n      </option>\r\n      <option name=\"TEST_OBJECT\" value=\"CLASS\" />\r\n      <properties />\r\n      <listeners />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Game\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"759ae11f-45ec-4453-988b-9a5743102467\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1620697099121</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1620697099121</updated>\r\n      <workItem from=\"1620697101450\" duration=\"423000\" />\r\n      <workItem from=\"1620776548625\" duration=\"376000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/RealSkyDive/.idea/workspace.xml b/out/production/RealSkyDive/.idea/workspace.xml
--- a/out/production/RealSkyDive/.idea/workspace.xml	(revision 11d7488461270ffc7b938ba4ab102f53767c2e47)
+++ b/out/production/RealSkyDive/.idea/workspace.xml	(date 1620779468471)
@@ -1,7 +1,13 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="759ae11f-45ec-4453-988b-9a5743102467" name="Default Changelist" comment="" />
+    <list default="true" id="b5c558b8-f9f5-4e28-8844-6c14bf93ca2d" name="Default Changelist" comment="">
+      <change beforePath="$PROJECT_DIR$/out/production/RealSkyDive/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/RealSkyDive/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/RealSkyDive/Game.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/RealSkyDive/Game.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/RealSkyDive/MouseInput.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/RealSkyDive/MouseInput.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Game.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/MouseInput.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/MouseInput.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -10,7 +16,7 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="ProjectId" id="1sMz9jtMSJWdnXFUmOObSriEoXB" />
+  <component name="ProjectId" id="1sPdUk7jvp3Yqa3ondEOeDnZbJq" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
@@ -18,8 +24,7 @@
   <component name="PropertiesComponent">
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
-    <property name="WebServerToolWindowFactoryState" value="false" />
-    <property name="aspect.path.notification.shown" value="true" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
   </component>
   <component name="RunManager">
     <configuration name="Game" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
@@ -29,19 +34,6 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
-    <configuration default="true" type="ArquillianTestNG" factoryName="" nameIsGenerated="true">
-      <option name="arquillianRunConfiguration">
-        <value>
-          <option name="containerStateName" value="" />
-        </value>
-      </option>
-      <option name="TEST_OBJECT" value="CLASS" />
-      <properties />
-      <listeners />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
     <recent_temporary>
       <list>
         <item itemvalue="Application.Game" />
@@ -51,28 +43,12 @@
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="759ae11f-45ec-4453-988b-9a5743102467" name="Default Changelist" comment="" />
-      <created>1620697099121</created>
+      <changelist id="b5c558b8-f9f5-4e28-8844-6c14bf93ca2d" name="Default Changelist" comment="" />
+      <created>1620778176191</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
-      <updated>1620697099121</updated>
-      <workItem from="1620697101450" duration="423000" />
-      <workItem from="1620776548625" duration="376000" />
+      <updated>1620778176191</updated>
     </task>
     <servers />
   </component>
-  <component name="TypeScriptGeneratedFilesManager">
-    <option name="version" value="3" />
-  </component>
-  <component name="Vcs.Log.Tabs.Properties">
-    <option name="TAB_STATES">
-      <map>
-        <entry key="MAIN">
-          <value>
-            <State />
-          </value>
-        </entry>
-      </map>
-    </option>
-  </component>
 </project>
\ No newline at end of file
